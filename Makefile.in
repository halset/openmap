# **********************************************************************
# 
#    Use, duplication, or disclosure by the Government is subject to
# 	     restricted rights as set forth in the DFARS.
#  
# 			   BBN Technologies
# 			    A Division of
# 			   BBN Corporation
# 			  10 Moulton Street
# 			 Cambridge, MA 02138
# 			    (617) 873-3000
#  
# 	  Copyright 1998 by BBN Technologies, A Division of
# 		BBN Corporation, all rights reserved.
#  
# **********************************************************************
# 
# $Source: /cvs/distapps/openmap/Attic/Makefile.in,v $
# $RCSfile: Makefile.in,v $
# $Revision: 1.25 $
# $Date: 1999/03/18 18:31:35 $
# $Author: dietrick $
# 
# **********************************************************************


TOP = @top_srcdir@

############
# includes #
############
include ${TOP}/openmap.mk


#####################
# variable settings #
#####################
Core.pkgs =	com.bbn.openmap \
		com.bbn.openmap.event \
		com.bbn.openmap.gui \
		com.bbn.openmap.omGraphics \
		com.bbn.openmap.proj \
		com.bbn.openmap.util

Core.classes =	com/bbn/openmap/*.class \
		com/bbn/openmap/event/*.class \
		com/bbn/openmap/gui/*.class \
		com/bbn/openmap/omGraphics/*.class \
		com/bbn/openmap/proj/*.class \
		com/bbn/openmap/util/*.class

Core.extra =	com/bbn/openmap/*.gif \
		com/bbn/openmap/gui/*.gif

Core.jar =	${Core.classes} ${Core.extra}

Layer.pkgs =	com.bbn.openmap.layer \
		com.bbn.openmap.layer.dted \
		com.bbn.openmap.layer.nitf \
		com.bbn.openmap.layer.pluginLayer \
		com.bbn.openmap.layer.plotLayer \
		com.bbn.openmap.layer.shape \
		com.bbn.openmap.layer.util \
		com.bbn.openmap.layer.util.cacheHandler \
		com.bbn.openmap.layer.util.html \
		com.bbn.openmap.layer.util.http \
		com.bbn.openmap.layer.util.stateMachine \
		com.bbn.openmap.layer.rpf \
		com.bbn.openmap.layer.vpf \
		com.bbn.openmap.layer.daynight \
#		com.bbn.openmap.layer.terrain \


Layer.classes =	com/bbn/openmap/layer/*.class \
		com/bbn/openmap/layer/dted/*.class \
		com/bbn/openmap/layer/nitf/*.class \
		com/bbn/openmap/layer/pluginLayer/*.class \
		com/bbn/openmap/layer/plotLayer/*.class \
		com/bbn/openmap/layer/shape/*.class \
		com/bbn/openmap/layer/util/*.class \
		com/bbn/openmap/layer/util/cacheHandler/*.class \
		com/bbn/openmap/layer/util/html/*.class \
		com/bbn/openmap/layer/util/http/*.class \
		com/bbn/openmap/layer/util/stateMachine/*.class \
		com/bbn/openmap/layer/rpf/*.class \
		com/bbn/openmap/layer/vpf/*.class \
		com/bbn/openmap/layer/daynight/*.class \
#		com/bbn/openmap/layer/terrain/*.class \

Layer.jar =	${Layer.classes}

App.pkgs = 	com.bbn.openmap.app

App.props = 	com/bbn/openmap/app/openmap.properties

App.classes = 	com/bbn/openmap/app/*.class

App.jar = 	${App.classes} ${App.props}

Example.jar =	com/bbn/openmap/examples/hello/*.class \
		com/bbn/openmap/examples/hello/*.properties


#########
# rules #
#########

default:	@DEFAULT_TARGET@

# java compile OpenMap code
core: omcore

omcore:
	cd com && $(MAKE) all

jar::
	$(RM) lib/omcore.jar lib/openmap.jar

jar:: 	omcore lib/omcore.jar lib/openmap.jar

all:	omcore jar

clean distclean::
	cd com && $(MAKE) $@

distclean::
	$(RM) Makefile openmap.mk bin/openmap
	$(RM) config.cache config.log config.status

lib:
	${INSTALL.dir} $@

lib/openmap.jar:: omcore lib
	${JAR} cf $@ ${Core.jar} ${Layer.jar} ${App.jar} ${Example.jar}

lib/omcore.jar:: omcore lib
	${JAR} cf $@ ${Core.jar}

GNUmakefile:
	perl rename.pl gmakefile GNUmakefile

gmakefile:
	perl rename.pl GNUmakefile gmakefile

#################
# documentation #
#################

JAVADOC.dir = doc/api

# use JDK 1.1 style javadocs.  we need to sort out any dependencies we
# have on the flat 1.1 javadoc file layout.  wouldntya know it?: JDK
# 1.2 uses a hierarchical javadoc file layout...
JAVA2_DOC_ARGS = -1.1

docs::
	${RM} ${JAVADOC.dir}/*.html

docs:: javadocs

${JAVADOC.dir}:
	${INSTALL.dir} $@

javadocs:	${JAVADOC.dir}
	${JAVADOC} @JAVA2_DOC_ARGS@ -J-mx32m -version -d ${JAVADOC.dir} \
		${Core.pkgs} ${App.pkgs} ${Layer.pkgs}

################
# installation #
################

docdir = ${prefix}/doc

# target to create any of the needed install directories

${prefix} ${bindir} ${libdir} ${datadir}:
	${INSTALL.dir} $@

# build the software before we try to do any installing
install::	all

# install in main dir
install::	${prefix}
	${RM} ${prefix}/README
	${RM} ${prefix}/LICENSE
	${INSTALL.doc} README ${prefix}
	${INSTALL.doc} LICENSE ${prefix}

# install in bin
install::	${bindir} bin/openmap
	${RM} ${bindir}/openmap
	${INSTALL.bin} bin/openmap ${bindir}/openmap
	${INSTALL.bin} com/bbn/openmap/examples/hello/hello-world ${bindir}/hello-world
	${INSTALL.bin} com/bbn/openmap/examples/simple/simple ${bindir}/simple
	${INSTALL.bin} com/bbn/openmap/examples/simple/simple2 ${bindir}/simple2

# install in lib
install::	${libdir} lib/omcore.jar lib/openmap.jar
	${RM} ${libdir}/omcore.jar ${libdir}/openmap.jar
	${INSTALL.jar} lib/omcore.jar ${libdir}/omcore.jar
	${INSTALL.jar} lib/openmap.jar ${libdir}/openmap.jar

# install in share.  (this must be done one file at a time for
# install-sh to work properly)
install::	${datadir}
	${INSTALL.data} share/openmap.properties ${datadir}
	${INSTALL.data} share/dcwpo-browse.shp ${datadir}
	${INSTALL.data} share/dcwpo-browse.ssx ${datadir}

# install in doc
install-docs::
	@if [ -d ${docdir}.old ]; then ${RM} -r ${docdir}.old ; fi
	@if [ -d ${docdir} ]; then \
		echo "moving existing ${docdir} to ${docdir}.old" ; \
		mv ${docdir} ${docdir}.old ; \
	fi

install-docs::
	cp -R doc ${prefix}
