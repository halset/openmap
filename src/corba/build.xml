<?xml version="1.0"?>
<project name="OpenMap_corba" default="all.corba" basedir=".">

  <!--  ############################
	Set up the different builds.
	############################ -->  

  <target name="init.corba" 
	  description="Sets properties needed by the other targets.">
    <tstamp/>

    <property name="openmap.home" value="../.."/>
    <property name="openmap.class_dir" value="${openmap.home}/classes"/>
    <property name="openmap.classes" value="${openmap.home}/classes/openmap"/>
    <property name="corba.src" value="${openmap.home}/src/corba"/>
    <property name="corba.jar" value="${openmap.home}/lib/omcorba.jar"/>
    <property name="corba_vb.jar" value="${openmap.home}/lib/omcorba_vb.jar"/>
    <property name="corba.classes" value="${openmap.home}/classes/corba"/>

    <property name="general.excludes" value="**/*.in, **/Makefile, **/*.bat,
		                             **/ChangeLog, **/*.html, **/*.txt,
					     **/*.*.txt, **/*.dat, **/*.idl,
					     **/*.pl, **/unimplemented/**, **/build.xml"/>

    <property name="javac.excludes" value="${general.excludes}, 
					   **/*.gif, **/*.png" />

    <property name="idl2java.compiler" value="com.sun.tools.corba.se.idl.toJavaPortable.Compile" />

    <!-- ### VisiBroker settings - need to set idl2java compiler property differently. ### -->
    <!-- sets the visibroker.home present property to the value "true"
	 if the home directory of Visibroker is found. -->
    <property name="visibroker.home" value="/usr/local/openmap/vbroker-3.4/java"/>
    <available file="${visibroker.home}" property="do.visibroker"/> 
    <!-- Visibroker compiler is:
    <property name="idl2java.compiler" value="com.visigenic.vbroker.tools.idl2java" />
    -->
    <property name="visibroker.jars" value="${visibroker.home}/lib/vbjapp.jar:${visibroker.home}/lib/vbjcosnm.jar:${visibroker.home}/lib/vbjtools.jar:${visibroker.home}/lib/vbjorb.jar"/>
    <property name="visibroker.bootclasspath" value="${visibroker.jars}:${java.home}/lib/rt.jar:${corba.classes}:${openmap.classes}"/>

    <!-- Check to see if there is a idl2java compiler available -->
    <condition property="idl.compiler">
      <and>
	<available classname="${idl2java.compiler}"/>
      </and>
    </condition> 

    <!-- check to see if the idls need to be compiled. -->
    <property name="cspecialist.home" value="${corba.src}/com/bbn/openmap/CSpecialist"/>
    <available file="${cspecialist.home}" property="idl.compiled"/> 

  </target>

  <!--  ############################
	Standard targets, to be directed at particular CORBA installations.
	############################ -->  

  <!-- in case we change orbs later. -->
  <target name="all.corba" depends="classes.corba, jar.corba"/> 

  <target name="classes.corba" depends="init.corba" if="idl.compiler" >
    <mkdir dir="${corba.classes}"/>
    <antcall target="classes.jdkcorba"/>
<!--    <antcall target="classes.visibroker"/> -->
  </target>

  <target name="jar.corba" depends="jar.jdkcorba"/> 

  <!--  ############################
	JDK CORBA targets
	############################ -->  

  <target name="jdkcorba.idl" depends="init.corba"
	  description="Create stub classes from idl files and compile stubs."
	  unless="idl.compiled,do.visibroker"
	  if="idl.compiler">
    <echo message="Creating CORBA stub classes from idls with JDK CORBA..."/>
    
    <echo message="  CORBA RPF FrameProvider package..."/>
    <java classname="${idl2java.compiler}" fork="yes">
      <arg line='-td ${corba.src} -fall -pkgPrefix CRpfFrameProvider com.bbn.openmap.layer.rpf.corba com/bbn/openmap/layer/rpf/corba/CorbaRpfFrameProvider.idl'/>
    </java>

    <echo message="  CORBA Specialist package..."/>
    <java classname="${idl2java.compiler}" fork="yes">
      <arg line='-td ${corba.src} -fall -pkgPrefix CSpecialist com.bbn.openmap com/bbn/openmap/layer/specialist/Specialist.idl'/>
    </java>

    <echo message="  CORBA ImageServer package..."/>
    <java classname="${idl2java.compiler}" fork="yes">
      <arg line='-td ${corba.src} -fall -pkgPrefix corbaImageServer com.bbn.openmap.plugin.corbaImage com/bbn/openmap/plugin/corbaImage/CorbaImageServer.idl'/>
    </java>
  </target>

  <target name="jdkcorba.stubs" depends="jdkcorba.idl"
	  description="Compile stub classes created from idl files.">
    <echo message="Compiling CORBA stub classes..."/>
    <javac srcdir="${corba.src}"
           destdir="${corba.classes}"
	   debug="on"
	   includes="**/CRpfFrameProvider/**, **/CSpecialist/**, **/corbaImageServer/**"
	   excludes="${javac.excludes}" />
  </target>

  <!-- Kick off bulding corba classes with visibroker -->
  <target name="classes.jdkcorba" depends="jdkcorba.stubs"
	  description="Compiles the Corba classes with the JDK CORBA implementation. (Call this to build CORBA classes) " >

    <echo message="Compiling CORBA classes with JDK CORBA..."/>
    <javac srcdir="${corba.src}"
	   destdir="${corba.classes}"
	   debug="on"
	   classpath="${openmap.classes}:${openmap.home}/lib/openmap.jar"
	   includes="**/*.java"
	   excludes="**/unimplemented/**" />

    <copy todir="${corba.classes}/com/bbn/openmap"> 
      <fileset dir="${corba.src}/com/bbn/openmap" 
	       includes="**/*.gif, **/*.png, **/*.properties"/>
    </copy>

  </target>

  <target name="jar.jdkcorba"
	  depends="init.corba"
	  description="Builds jar files, placing them in the lib directory." 
	  if="idl.compiler">

    <jar jarfile="${corba.jar}" 
	 basedir="${corba.classes}"
	 includes="**/*.class"/>
  </target>    

  <!--  ############################
	Visibroker targets
	############################ -->  

  <target name="visibroker.idl" depends="init.corba"
	  description="Create stub classes from idl files and compile stubs."
	  unless="idl.compiled"
	  if="idl.compiler">
    <echo message="Creating CORBA stub classes from idls with Visibroker..."/>
    
    <java classname="${idl2java.compiler}" fork="yes">
      <jvmarg line='-Xbootclasspath:${visibroker.bootclasspath} -DORBdisableLocator'/>
      <arg line='-root_dir ${corba.src} -package com.bbn.openmap.layer.rpf.corba com/bbn/openmap/layer/rpf/corba/CorbaRpfFrameProvider.idl'/>
    </java>

    <java classname="${idl2java.compiler}" fork="yes">
      <jvmarg line='-Xbootclasspath:${visibroker.bootclasspath} -DORBdisableLocator'/>
      <arg line='-root_dir ${corba.src} -package com.bbn.openmap com/bbn/openmap/layer/specialist/Specialist.idl'/>
    </java>

    <java classname="${idl2java.compiler}" fork="yes">
      <jvmarg line='-Xbootclasspath:${visibroker.bootclasspath} -DORBdisableLocator'/>
      <arg line='-root_dir ${corba.src} -package com.bbn.openmap.plugin.corbaImage com/bbn/openmap/plugin/corbaImage/CorbaImageServer.idl'/>
    </java>
  </target>

  <target name="visibroker.stubs" depends="visibroker.idl"
	  description="Compile stub classes created from idl files.">
    <echo message="Compiling CORBA stub classes..."/>
    <javac srcdir="${corba.src}"
           destdir="${corba.classes}"
	   debug="on"
	   includes="**/CRpfFrameProvider/**, **/CSpecialist/**, **/corbaImageServer/**"
	   excludes="${javac.excludes}"
	   bootclasspath="${visibroker.bootclasspath}" />
  </target>

  <!-- Kick off bulding corba classes with visibroker -->
  <target name="classes.visibroker" depends="visibroker.stubs"
	  description="Compiles the Corba classes with the Visibroker CORBA implementation. You must have Visibroker (http://www.borland.com/bes/visibroker) installed. (Call this to build CORBA classes) "
	  if="do.visibroker">

    <echo message="Compiling CORBA classes with Visibroker..."/>
    <javac srcdir="${corba.src}"
	   destdir="${corba.classes}"
	   debug="on"
	   includes="**/layer/rpf/corba/**/*.java,
		     **/layer/specialist/**/*.java,
		     **/plugin/corbaImage/**/*.java"
	   excludes="**/unimplemented/**"
	   bootclasspath="${visibroker.bootclasspath}" />

    <copy todir="${corba.classes}/com/bbn/openmap"> 
      <fileset dir="${corba.src}/com/bbn/openmap" 
	       includes="**/*.gif, **/*.png, **/*.properties"/>
    </copy>

  </target>

  <!-- Target only needed if you want a differently named jar file for
       openmap class files compiled with visibroker. -->
  <target name="jar.visibroker"
	  depends="init.corba"
	  description="Builds jar files, placing them in the lib directory."
	  if="do.visibroker">

    <jar jarfile="${corba_vb.jar}" 
	 basedir="${corba.classes}"
	 includes="**/*.class"/>
  </target>    

  <!--  ############################
	Cleanup targets
	############################ -->  
  <target name="clean_all.corba"
	  depends="clean.corba, clean_docs.corba"
	  description="Delete jar files, class files, and generated documentation."/>

  <target name="clean.corba" 
	  depends="init.corba, clean_jars.corba"
	  description="Delete jar files and all class files" >
    <delete dir="${corba.classes}"/>
  </target>

  <target name="distclean.corba"
	  depends="clean_stubs.corba, clean.corba"
	  description="Delete the Corba OpenMap class files and the stub classes, but not the jar files."/>

  <target name="clean_stubs.corba"
	  depends="init.corba"
	  description="Delete the Corba OpenMap Stub classes generated from IDLs.">
    <delete dir="${corba.src}/com/bbn/openmap/layer/rpf/corba/CRpfFrameProvider"/>
    <delete dir="${corba.src}/com/bbn/openmap/CSpecialist"/>
    <delete dir="${corba.src}/com/bbn/openmap/plugin/corbaImage/corbaImageServer"/>
  </target>

  <target name="clean_jars.corba"
	  description="Delete only the jar files from the lib directory.">
    <delete file="${corba.jar}"/>
  </target>

  <target name="clean_docs.corba"
          description="Delete only the generated API documentation.">
    <delete dir="${openmap.docs}/com"/>
    <delete>
      <fileset dir="${openmap.docs}" includes="**/*.html" excludes="doc-index.html"/>
    </delete>
    <delete file="${openmap.docs}/stylesheet.css"/>
    <delete file="${openmap.docs}/package-list"/>
  </target>

  <!--  ############################
	End of cleanup targets.
	############################ -->  
 
</project>

