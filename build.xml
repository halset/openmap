<?xml version="1.0"?>
<project name="OpenMap" default="all" basedir=".">

  <!--  ############################
	Set up the different builds.
	############################ -->  

	<target name="init" 
	        description="Sets properties needed by the other targets.">
		<tstamp/>
		<!-- Replace 'classic' with 'jikes' if you want. -->
		<property name="build.compiler" value="classic"/>
		<property name="openmap.home" value="."/>
		<property name="openmap.class_dir" value="./classes"/>
		<property name="openmap.classes" value="./classes/openmap"/>

		<!-- YOU HAVE TO CHANGE THIS TO MATCH YOUR BATIK INSTALLATION -->
		<property name="batik.home" value="/usr/local/openmap/batik-1.1.1"/>

		<property name="openmap.contrib" value="${openmap.home}/contrib"/>
		<property name="javac.excludes" value="**/*.in, **/Makefile, **/*.bat,
		                                       **/ChangeLog, **/*.html, **/*.txt,
						       **/*.*.txt, **/*.dat,
						       **/*.pl, **/unimplemented/**, 
						       **/GeneratorTester.java" />
		<property name="jar.excludes" value="${javac.excludes}, **/*.java"/>

		<!-- ############################ 
		     These are properties for packages that 
		     rely on other code packages (Non-standard).  
		     ############################ -->

		<property name="corba.excludes" value="**/corba/**, **/corbaImage/**, **/CSpecialist/**, **/specialist/**"/>
		<property name="svg.excludes" value="**/SVGFormatter.java"/>
		<property name="j3d.excludes" value="**/j3d/**, **/pilot/**"/>

		<property name="personal.excludes" 
		          value="**/OMShape.java,
			         **/gml/**, **/CloudImagePlugIn.java, 
				 **/EditableOMText.java, **/OMTextLoader.java"/>

		<property name="svg.jars" value="${batik.home}/lib/batik-svggen.jar;${batik.home}/lib/batik-awt-util.jar;${batik.home}/lib/batik-util.jar;${batik.home}/lib/batik-dom.jar;${batik.home}/lib/batik-ext.jar;${batik.home}/lib/batik-xml.jar;${batik.home}/lib/batik-svggen.jar;${batik.home}/lib/batik-awt-util.jar;${batik.home}/lib/batik-util.jar;${batik.home}/lib/batik-dom.jar;${batik.home}/lib/batik-ext.jar;${batik.home}/lib/batik-xml.jar;${batik.home}/lib/batik-svg-dom.jar"/>

		<!-- These are packages that depend on other, non-standard java
		     installations. You can remove these packages from this list if you
		     have the packages installed, or generate them specifically
		     with their target names.  -->
		<property name="dependency.excludes" 
		          value="${corba.excludes}, ${svg.excludes}, 
			         ${j3d.excludes}, ${personal.excludes}"/>

		<!-- ############################
		     End of non-standard list
		     ############################ -->  

		<!-- Currency conditions -->
		<uptodate property="contribBuild.notRequired"
		          targetfile="${openmap.home}/lib/openmap.jar" >
			  <srcfiles dir= "${openmap.home}/contrib"
			            excludes="${javac.excludes}, ${dependency.excludes}"
				    includes="**/*.java, **/*.class" />
		</uptodate>

		<uptodate property="openmapBuild.notRequired"
		          targetfile="${openmap.home}/lib/openmap.jar" >
			  <srcfiles dir= "${openmap.home}/com"
			            excludes="${javac.excludes}, ${dependency.excludes}"
				    includes="**/*.java, **/*.class" />
		</uptodate>

	</target>

	<!--  ############################
	      End of property setup.
	      ############################ -->  

	<!--  ############################
	      Main targets
	      ############################ -->  

	<target name="todo" 
	        depends="classes, presvg, prej3d, jar, visibroker" 
                description="Compiles all of the OpenMap classes and builds jar files in lib directory, including the svg, j3d and corba packages."/>

	<target name="classes" 
	        depends="contrib, openmap" 
                description="Compiles standard OpenMap classes."/>

	<target name="all" 
	        depends="jar"
		description="Compiles standard OpenMap classes and creates the jar files."/>

	<target name="jar"
	        depends="classes"
		description="Builds jar files, placing them in the lib directory."
		unless="contribBuild.buildRequired, openmapBuild.buildRequired">

	<!-- omcontrib is  no longer created by default - remove these comments if
	     you need to create that jar file, which contains the code
	     OpenMap uses that us from other packages.

	<jar jarfile="${openmap.home}/lib/omcontrib.jar"
	     basedir="${openmap.home}/contrib" includes="**/*.class"/>
	-->

	<jar jarfile="${openmap.home}/lib/openmap.jar" 
	     basedir="${openmap.classes}"
	     manifest="${openmap.home}/share/manifest.txt" 
	     includes="openmap.properties, com/**/*.class,
		       com/**/*.gif, com/**/*.png,
		       Acme/**/*.class, doppelt/**/*.class, 
		       com/**/*.properties" 
	     excludes="${corba.excludes}"/>

	<!-- omcore no longer created by default - remove these comments if
	     you need to create that jar file, which contains no layer or plugin
	     classes.

	<jar jarfile="${openmap.home}/lib/omcore.jar"
	     basedir="${openmap.classes}"
	     includes="openmap.properties,
	               com/bbn/openmap/*.class,	
		       com/bbn/openmap/*.gif,	
		       com/bbn/openmap/event/*.class,
		       com/bbn/openmap/gui/*.class, 
		       com/bbn/openmap/gui/*.gif, 
		       com/bbn/openmap/omGraphics/*.class, 
		       com/bbn/openmap/omGraphics/*.gif, 
		       com/bbn/openmap/omGraphics/editable/*.class, 
		       com/bbn/openmap/omGraphics/event*.class, 
		       com/bbn/openmap/omGraphics/geom/*.class, 
		       com/bbn/openmap/omGraphics/grid/*.class, 
		       com/bbn/openmap/omGraphics/labeled/*.class, 
		       com/bbn/openmap/omGraphics/util/*.class, 
		       com/bbn/openmap/layer/util/*.class,
		       com/bbn/openmap/layer/util/cacheHandler/*.class,
		       com/bbn/openmap/layer/util/html/*.class,
		       com/bbn/openmap/layer/util/http/*.class,
		       com/bbn/openmap/layer/util/stateMachine/*.class,
		       com/bbn/openmap/plugin/*.class, 
		       com/bbn/openmap/proj/*.class, 
		       com/bbn/openmap/tools/drawing/*.class, 
		       com/bbn/openmap/tools/drawing/*.gif, 
		       com/bbn/openmap/util/*.class, 
		       com/bbn/openmap/util/quadtree/*.class, 
		       com/bbn/openmap/image/*.class"
	     excludes="${corba.excludes}"/>

	-->

	</target>    
  
  <!--  ############################
	contrib relies on OpenMap Debug class - but we need to build it first.
	############################ -->  
	<target name="debug" depends="init">
	     <mkdir dir="${openmap.classes}"/>
	     <javac srcdir="${openmap.home}" 
	            destdir="${openmap.classes}"    
		    debug="on"
	            includes="com/bbn/openmap/util/Debug.java"/>
	</target>

  <!--  ############################
	Build all the packages that OpenMap code depends on, that are
	from other people.
	############################ -->  
	<target name="contrib" depends="debug"
	  description="Compiles the contrib classes that OpenMap needs.">
	       <echo message="Building OpenMap contrib classes..."/>
	       <javac srcdir="${openmap.contrib}"
	              destdir="${openmap.classes}"
		      debug="on"
		      excludes="${javac.excludes}, ${dependency.excludes}"/>
	</target>

  <!--  ############################
	Standard target, to build everything you can.
	############################ -->  
	<target name="openmap" 
	        depends="debug"
		description="Compiles the OpenMap classes.  Contrib classes compiled if needed.">
	     <echo message="Building OpenMap classes..."/>
	     <javac srcdir="${openmap.home}" 
	            destdir="${openmap.classes}"
		    debug="on"
		    excludes="${javac.excludes}, ${dependency.excludes}"/>

	     <!-- Copy the gifs and other resources to the new classpath. -->
	     <copy todir="${openmap.classes}" 
	           file="${openmap.home}/openmap.properties"/> 
	     <copy todir="${openmap.classes}/com/bbn/openmap"> 
	          <fileset dir="${openmap.home}/com/bbn/openmap" 
		           includes="**/*.gif, **/*.png, **/*.properties"/>
	     </copy>

	</target>

  <!--  ############################
	Build the documentation.
	############################ -->  
	<target name="docs" 
	        depends="init, visibroker.setup, presvg"
		description="Make the javadoc API html documents.">
	     <javadoc sourcepath="${openmap.home}"
	              destdir="${openmap.home}/doc/api"
			maxmemory="256m"
	excludepackagenames="**unimplemented**"
		      packagenames="com.bbn.openmap.*"
			bootclasspath="${visibroker.bootclasspath}:${svg.jars}"
		      author="true"
		      version="true"
		      use="true"
		      windowtitle="OpenMap API"
		      doctitle="OpenMap"
		      bottom="Copyright (C) 2002, BBNT Solutions LLC; See http://openmap.bbn.com/ for details" />
	</target>

  <!--  ############################
	Cleanup targets
	############################ -->  
	<target name="clean" 
	        depends="clean_classes, clean_jars"
		description="Delete jar files and all class files"/>

	<target name="distclean"
	        depends="visibroker.distclean, clean_classes"
		description="Delete class files, but not the jar files."/>

	<target name="clean_all"
	        depends="clean, clean_docs"
		description="Delete jar files, class files, and generated documentation."/>

	<target name="clean_classes" 
	        depends="init"
		description="Delete the OpenMap class files.">
	     <delete dir="${openmap.class_dir}" />
	</target>

	<target name="clean_jars"
	        description="Delete only the jar files from the lib directory.">
	     <delete file="lib/openmap.jar"/>
	</target>

	<target name="clean_docs"
                description="Delete only the generated API documentation.">
	     <delete dir="doc/com"/>
	     <delete>
	          <fileset dir="doc" includes="**/*.html" excludes="doc-index.html"/>
	     </delete>
	     <delete file="doc/stylesheet.css"/>
	     <delete file="doc/package-list"/>
	</target>

  <!--  ############################
	End of cleanup targets.
	############################ -->  

	<!--      depends="jar" -->
	<target name="run"
	        description="Run the OpenMap application.">
	     <java classname="com.bbn.openmap.app.OpenMap"
	           classpath="lib/openmap.jar"
		   fork="yes"/>
	</target>

  <!--  ############################
	These targets are for OpenMap packages that depend on code from
  	other packages that are not distributed with OpenMap.
	############################ -->  
	<target name="presvg" 
                depends="init"
		description="Compiles the SVG Formatter.">
	     <echo message="Compiling SVG classes with ${svg.jars}"/>
	     <javac srcdir="${openmap.home}"
	            destdir="${openmap.classes}"
		    includes="${svg.excludes}"
		    classpath="${openmap.home}/lib/openmap.jar;${openmap.classes};${svg.jars}"
		    excludes="${javac.excludes}"/>
	</target>

	<target name="svg" 
	        depends="init, presvg, jar"
		description="Compiles the SVG Formatter and recreates the jars after compiling this target. You must have Batik (http://xml.apache.org/batik/index.html) installed.  (Call this to build SVG targets)">
		<echo message="SVG classes included in jar files."/>
	</target>

	<target name="visibroker.setup" 
	        depends="init">
		<!-- YOU HAVE TO CHANGE THIS TO MATCH YOUR VISIBROKER INSTALLATION -->
		<property name="openmap.vb_classes" value="${openmap.home}/classes/corba_vb"/>
		<property name="visibroker.home" value="/usr/local/openmap/vbroker-3.4/java"/>
		<property name="visibroker.jars" value="${visibroker.home}/lib/vbjapp.jar:${visibroker.home}/lib/vbjcosnm.jar:${visibroker.home}/lib/vbjtools.jar:${visibroker.home}/lib/vbjorb.jar"/>
		<property name="visibroker.bootclasspath" value="${visibroker.jars}:${java.home}/lib/rt.jar:${openmap.classes}"/>
		<mkdir dir="${openmap.vb_classes}" />
	</target>

	<target name="visibroker.check" 
	        unless="idlcompile.notRequired">
		<antcall target="visibroker.idl" />
	</target>

	<target name="visibroker.idl" depends="visibroker.setup"
	        description="Create stub classes from idl files and compile stubs.">
		<echo message="Creating CORBA stub classes from idls with Visibroker..."/>

		<java classname="com.visigenic.vbroker.tools.idl2java" 
		      fork="yes">
		      <jvmarg line='-Xbootclasspath:${visibroker.bootclasspath} -DORBdisableLocator'/>
		      <arg line='-root_dir ${openmap.home} -package com.bbn.openmap.layer.rpf.corba com/bbn/openmap/layer/rpf/corba/CorbaRpfFrameProvider.idl'/>
		</java>

		<java classname="com.visigenic.vbroker.tools.idl2java" 
		      fork="yes">
		      <jvmarg line='-Xbootclasspath:${visibroker.bootclasspath} -DORBdisableLocator'/>
		      <arg line='-root_dir ${openmap.home} -package com.bbn.openmap com/bbn/openmap/layer/specialist/Specialist.idl'/>
		</java>

		<java classname="com.visigenic.vbroker.tools.idl2java" 
		      fork="yes">
		      <jvmarg line='-Xbootclasspath:${visibroker.bootclasspath} -DORBdisableLocator'/>
		      <arg line='-root_dir ${openmap.home} -package com.bbn.openmap.plugin.corbaImage com/bbn/openmap/plugin/corbaImage/CorbaImageServer.idl'/>
		</java>

		<javac srcdir="${openmap.home}"
                       destdir="${openmap.vb_classes}"
		       debug="on"
		       includes="**/CRpfFrameProvider/**, **/CSpecialist/**, **/corbaImageServer/**"
		       excludes="${java.excludes}"
		       bootclasspath="${visibroker.bootclasspath}" />
	</target>

	<target name="visibroker" depends="visibroker.setup"
	        description="Compiles the Corba classes with the Visibroker CORBA implementation. You must have Visibroker (http://www.borland.com/bes/visibroker) installed. (Call this to build CORBA classes) ">

		<uptodate property="idlcompile.notRequired"
		          targetfile="${openmap.home}/lib/omcorba_vb.jar" >
			  <srcfiles dir= "${openmap.home}/com"
			            excludes="${javac.excludes}, ${dependency.excludes}"
				    includes="**/CorbaRpfFrameProvider.idl, 
				              **/Specialist.idl, 
					      **/CorbaImageServer.idl" />
		</uptodate>

		<antcall target="visibroker.check" />
		<echo message="Compiling CORBA classes with Visibroker..."/>
		<javac srcdir="${openmap.home}"
		       destdir="${openmap.vb_classes}"
		       debug="on"
		       includes="**/layer/rpf/corba/**/*.java,
		                 **/layer/specialist/**/*.java,
				 **/plugin/corbaImage/**/*.java"
		       excludes="**/unimplemented/**"
		       bootclasspath="${visibroker.bootclasspath}" />
		<jar jarfile="${openmap.home}/lib/omcorba_vb.jar"
		     basedir="${openmap.vb_classes}"
		     includes="**/*.class"/>
	</target>

	<target name="visibroker.clean" 
	        depends="visibroker.distclean"
	        description="Delete the Corba OpenMap class, stub and jar files.">
		<delete file="lib/omcorba_vb.jar"/>
	</target>

	<target name="visibroker.distclean" 
		description="Delete the Corba OpenMap class files and the stub classes.">
		<delete dir="${openmap.vb_classes}"/>
		<delete dir="com/bbn/openmap/layer/rpf/corba/CRpfFrameProvider"/>
		<delete dir="com/bbn/openmap/CSpecialist"/>
		<delete dir="com/bbn/openmap/plugin/corbaImage/corbaImageServer"/>
	</target>

	<target name="prej3d"
	        depends="init"
		description="Compiles the Java 3D OpenMap code.  You must have the Java 3D extension package (http://java.sun.com/products/java-media/3D/index.html) installed in your Java installation.">
		<javac srcdir="${openmap.home}"
		       destdir="${openmap.classes}"
		       debug="on"
		       includes="${j3d.excludes}"
		       classpath="${openmap.home}/lib/openmap.jar;${openmap.home};${openmap.home}/contrib"
		       excludes="${javac.excludes}"/>
	</target>

	<target name="j3d"
                depends="init, prej3d, jar"
		description="Compiles the Java 3D OpenMap code and adds it to the jars.  You must have the Java 3D extension package (http://java.sun.com/products/java-media/3D/index.html) installed in your Java installation. (Call this to build J3D targets)">
		<echo message="J3D classes included in jar files."/>
	</target>
 
</project>

