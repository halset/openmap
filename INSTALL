Here's what you can do to take it for a test drive:

cvs co openmap
cd openmap
./configure
make
chmod +x bin/openmap
mkdir share
cd share
 -- Get DCW shape data from ftp://wolfjaw/pub/dcwpo-browse.[shp, ssx]
cd ..
bin/openmap

Basic Installation
==================

   These are generic installation instructions.

   The `configure' shell script attempts to guess correct values for
   various system-dependent variables used during compilation.  It
   uses those values to create a `Makefile' in each directory of the
   package. Finally, it creates a shell script `config.status' that
   you can run in the future to recreate the current configuration, a
   file `config.cache' that saves the results of its tests to speed up
   reconfiguring, and a file `config.log' containing compiler output
   (useful mainly for debugging `configure').

   If you need to do unusual things to compile the package, please try
   to figure out how `configure' could check whether to do them, and
   mail diffs or instructions to the address given in the `README' so
   they can be considered for the next release.  If at some point
   `config.cache' contains results you don't want to keep, you may
   remove or edit it.

   The file `configure.in' is used to create `configure' by a program
   called `autoconf'.  You only need `configure.in' if you want to
   change it or regenerate `configure' using a newer version of
   `autoconf'.

The simplest way to compile this package is:

  1. `cd' to the directory containing the package's source code and type
     `./configure' to configure the package for your system.  If you're
     using `csh' on an old version of System V, you might need to type
     `sh ./configure' instead to prevent `csh' from trying to execute
     `configure' itself.

     Running `configure' takes awhile.  While running, it prints some
     messages telling which features it is checking for.

  2. Type `make' to compile the package.

  3. Type `make install' to install the programs and any data files and
     documentation.

  4. You can remove the program binaries and object files from the
     source code directory by typing `make clean'.  To also remove the
     files that `configure' created (so you can compile the package for
     a different kind of computer), type `make distclean'.
