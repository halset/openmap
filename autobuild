#!/bin/sh
# **********************************************************************
# 
#    Use, duplication, or disclosure by the Government is subject to
# 	     restricted rights as set forth in the DFARS.
#  
# 			   BBN Technologies
# 			    A Division of
# 			   BBN Corporation
# 			  10 Moulton Street
# 			 Cambridge, MA 02138
# 			    (617) 873-3000
#  
# 	  Copyright 1998 by BBN Technologies, A Division of
# 		BBN Corporation, all rights reserved.
#  
# **********************************************************************
# 
# $Source: /cvs/distapps/openmap/Attic/autobuild,v $
# $RCSfile: autobuild,v $
# $Revision: 1.13 $
# $Date: 1998/05/17 21:06:12 $
# $Author: tmitchel $
# 
# **********************************************************************
#
# This script will build the openmap package automatically.
#
# **********************************************************************


#----------------------------------------------------------------------
#
#----------------------------------------------------------------------

# Show the usage for this script
#
#
showUsage () {
  echo "usage: $0 <args>"
  echo "Arguments:"
  echo "-d or --directory :   The build directory"
  echo "-v or --verbose :   Be vocal about things"
}



#----------------------------------------------------------------------
# Default variable settings.  Override via command line args
#----------------------------------------------------------------------

BuildDir=""
Verbose=/bin/false


#----------------------------------------------------------------------
# Command line argument parsing
#----------------------------------------------------------------------

# Parse command line arguments
# -d || -directory
# -v || -verbose
#

while [ "$1" != "" ] ; do

  case $1 in

    "-d" | "--directory" )

      BuildDir=$2;
      shift;;

    "-v" | "--verbose" )

      Verbose=/bin/true
      ;;

  esac;
  shift;
done

if [ "$BuildDir" = "" ] ; then
  showUsage
  exit 1
fi

BuildRoot=`dirname $BuildDir`
BeanName=`basename $BuildDir`

if $Verbose; then
  echo "BuildDir = $BuildDir"
  echo "BuildRoot = $BuildRoot"
  echo "BeanName = $BeanName"
fi

echo ""
echo "MapBean build started at `date`"

if $Verbose; then
  echo "building in $BuildRoot"
fi


#----------------------------------------------------------------------
# Set up the environment.  Some of these should be command line
# arguments.
#----------------------------------------------------------------------

CVSROOT=:server:blatz:/u4/rcs

MattClassDir=/usr/local/matt/openmap/common/lib
OpenMapClassPath=$MattClassDir/cspec58.jar

JDK=/usr/local/blatz/jdk1.1.6
JdkClassPath=$JDK/lib/classes.zip

SWING=/usr/local/blatz/swing-1.0.2
SwingClassPath=$SWING/swing.jar

VBJ=/usr/local/matt/VisiBroker3.2-java
VbjClassPath=$VBJ/lib/vbjorb.jar

CLASSPATH=$OpenMapClassPath:$SwingClassPath:$JdkClassPath:$VbjClassPath:$BuildDir/openmap
export CLASSPATH

PATH=/usr/bin:/usr/local/gnu/bin:$JDK/bin
export PATH

CVSROOT=/u4/rcs
export CVSROOT

DocPackages="com.bbn.openmap com.bbn.openmap.dcwSpecialist com.bbn.openmap.event com.bbn.openmap.gui com.bbn.openmap.html com.bbn.openmap.http com.bbn.openmap.omGraphics com.bbn.openmap.overlay com.bbn.openmap.proj com.bbn.openmap.specialist"
export DocPackages

#echo $CLASSPATH

# set: -e = exit if a command exits with a non-zero exit status
# set: -v = Print shell input lines as they are read
# set: -x = Print commands and their  arguments  as  they  are executed.
if $Verbose; then
  set -evx
else
  set -e
fi

#
## Create a build directory
#
rm -rf $BuildDir
mkdir -p $BuildDir
cd $BuildDir

#
## Export the sources
#
cvs export -Dnow openmap
cd openmap

#
## Build the software
#
gmake all

#
## Create the bean jar file
#
jar cvfm0 ../mapBean.jar com/bbn/openmap/Manifest.txt `find com \( -name *.class -o -name *.gif \) -print`


#
## Add javadoc documentation
#
mkdir -p ../docs/api
java -ms40m -mx80m sun.tools.javadoc.Main -version -d ../docs/api $DocPackages
cp -r $JDK/docs/api/images ../docs/api/

#
## Add examples
#
mkdir -p ../examples
cp -r com/bbn/openmap/examples/crew ../examples/

#
## Add other jar files
#
#if cp /usr/local/matt/openmap/common/lib/assembler3.jar $BuildDir/; then
#  echo "++Copied assembler jar";
#else
#  echo "++Copy failed: assembler jar";
#  exit 1;
#fi

if cp /usr/local/matt/openmap/common/lib/cspec58.jar $BuildDir/; then
  echo "++Copied cspec jar";
else
  echo "++Copy failed: cspec jar";
  exit 1;
fi




# Create packages in tar.Z, tar.gz, and zip format

PkgFiles="$BeanName/mapBean.jar $BeanName/cspec58.jar $BeanName/docs $BeanName/examples"

cd $BuildDir/..
tar cf $BuildDir/$BeanName.tar $PkgFiles
jar cfM $BuildDir/$BeanName.zip $PkgFiles
cd $BuildDir
compress -c $BeanName.tar > $BeanName.tar.Z
gzip $BeanName.tar

echo ""
echo "MapBean build complete at `date`"
exit 0
